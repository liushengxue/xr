{"version":3,"file":"static/js/StockList.1a66d616.chunk.js","mappings":"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","sources":["pages/store/AddStoreModal.js","pages/process/StockList.js","../node_modules/@ant-design/icons-svg/es/asn/DownloadOutlined.js","../node_modules/@ant-design/icons/es/icons/DownloadOutlined.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Input, Select, Form, InputNumber } from 'antd';\nimport { getModelAndBrandByType } from '../../api/api';\n\nfunction AddStoreModal(props) {\n  const { form, handleOk, typeList, updateVisible } = props;\n  const [model, updateModel] = useState([]);\n  const [brand, updateBrand] = useState([]);\n\n  async function onChange(value) {\n    form.setFieldsValue({ modelId: '', brandId: '' });\n    if (value) {\n      const res = await getModelAndBrandByType({ typeId: value });\n      if (res?.code === 200) {\n        updateModel(res?.result?.modelList);\n        updateBrand(res?.result?.brandList);\n      }\n    }\n  }\n\n  function onclose() {\n    form.resetFields();\n    updateVisible(false);\n  }\n\n  return (\n    <Modal title=\"库存录入\" open cancelText=\"取消\" okText=\"确定\" onOk={handleOk} onCancel={onclose}>\n      <Form form={form} labelCol={{ span: 4 }} wrapperCol={{ span: 19 }} autoComplete=\"off\">\n        <Form.Item label=\"类别\" name=\"typeId\" rules={[{ required: true, message: '请选择类别' }]}>\n          <Select showSearch onChange={onChange}>\n            {typeList.map((type) => (\n              <Select.Option value={type.id} key={type.id}>\n                {type.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"型号\" name=\"modelId\" rules={[{ required: true, message: '请选择型号' }]}>\n          <Select showSearch>\n            {model.map((type) => (\n              <Select.Option value={type.id} key={type.id}>\n                {type.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"品牌\" name=\"brandId\" rules={[{ required: true, message: '请选择品牌' }]}>\n          <Select showSearch>\n            {brand.map((type) => (\n              <Select.Option value={type.id} key={type.id}>\n                {type.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"配置\" name=\"config\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"数量\" name=\"count\" rules={[{ required: true, message: '请输入数量' }]}>\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"厂商\" name=\"factory\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"存放地址\" name=\"storageAddress\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"备注\" name=\"note\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default AddStoreModal;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { Card, Input, Table, Button, Form, message } from 'antd';\nimport { PlusOutlined, DownloadOutlined } from '@ant-design/icons';\nimport AddStoreModal from '../store/AddStoreModal';\nimport userInfoContext from '../../utils/context';\nimport { createDownLoadData, formatExportData } from '../../utils/utils';\nimport { getTypeList, addStorage, getStorageList } from '../../api/api';\nimport moment from 'moment/moment';\n\nfunction StockList() {\n  const [data, updateData] = useState([]);\n  const [visible, updateVisible] = useState(false);\n  const [typeList, updateTypeList] = useState([]);\n  const [rows, updateRows] = useState([]);\n  const { currentUser = {} } = useContext(userInfoContext);\n  const [form] = Form.useForm();\n\n  const columns = [\n    { title: '类别', dataIndex: 'type_name' },\n    { title: '型号', dataIndex: 'model_name' },\n    { title: '品牌', dataIndex: 'brand_name' },\n    { title: '数量', dataIndex: 'count' },\n    { title: '配置', dataIndex: 'config' },\n    { title: '备注', dataIndex: 'note' },\n    { title: '库存地址', dataIndex: 'storage_address' },\n    // { title: '业务员', dataIndex: 'salesman' },\n    { title: '入库日期', key: 'createTime', render: (_, record) => moment(record.create_time).format('YYYY-MM-DD HH:mm:ss') },\n  ];\n\n  useEffect(() => {\n    getTypeList().then((res) => {\n      if (res?.code === 200) {\n        updateTypeList(res?.result);\n      }\n    });\n    getStorage();\n  }, []);\n\n  function getStorage(payload) {\n    getStorageList(payload).then((res) => {\n      if (res?.code === 200) {\n        updateData(res?.result);\n      }\n    });\n  }\n\n  function onChange(selectedRowKeys, selectedRows) {\n    updateRows(selectedRows);\n  }\n\n  function download() {\n    if (!rows.length) {\n      return message.error('请先选择要导出的数据');\n    }\n\n    let list = JSON.parse(JSON.stringify(rows));\n    list = list.map((item) => ({\n      类别: item.type_name,\n      型号: item.model_name,\n      品牌: item.brand_name,\n      数量: item.count,\n      配置: item.config,\n      备注: item.note,\n      存放地址: item.storage_address,\n      入库日期: moment(item.create_time).format('YYYY-MM-DD HH:mm:ss'),\n    }));\n\n    createDownLoadData(list);\n  }\n\n  async function handleOk() {\n    const values = await form.validateFields();\n    const res = await addStorage(values);\n    if (res.code === 200) {\n      message.success('录入成功');\n      updateVisible(false);\n      form.resetFields();\n      getStorage();\n    } else {\n      message.error('录入失败');\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card bordered={false}>\n        <div style={{ marginBottom: 10 }}>\n          {/* <Input.Search placeholder=\"搜索\" style={{ width: 300 }} allowClear /> */}\n\n          {currentUser.role === '1' && (\n            <div style={{ float: 'right', marginBottom: 5 }}>\n              <Button type=\"primary\" icon={<DownloadOutlined />} onClick={download}>\n                导出\n              </Button>\n              <Button type=\"primary\" style={{ marginLeft: 10 }} icon={<PlusOutlined />} onClick={() => updateVisible(!visible)}>\n                库存录入\n              </Button>\n            </div>\n          )}\n        </div>\n\n        <Table dataSource={data} rowSelection={{ onChange }} columns={columns} pagination={{}} bordered size=\"small\" />\n\n        {visible && <AddStoreModal form={form} typeList={typeList} handleOk={handleOk} updateVisible={updateVisible} />}\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default StockList;\n","// This icon file is generated automatically.\nvar DownloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.7 661a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"download\", \"theme\": \"outlined\" };\nexport default DownloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownloadOutlined = function DownloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownloadOutlinedSvg\n  }));\n};\n\nDownloadOutlined.displayName = 'DownloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownloadOutlined);"],"names":["props","form","handleOk","typeList","updateVisible","useState","model","updateModel","brand","updateBrand","value","setFieldsValue","modelId","brandId","getModelAndBrandByType","typeId","res","code","result","modelList","brandList","title","open","cancelText","okText","onOk","onCancel","resetFields","labelCol","span","wrapperCol","autoComplete","label","name","rules","required","message","showSearch","onChange","map","type","id","data","updateData","visible","updateTypeList","rows","updateRows","useContext","userInfoContext","currentUser","Form","columns","dataIndex","key","render","_","record","moment","create_time","format","getStorage","payload","getStorageList","then","validateFields","values","addStorage","useEffect","getTypeList","Fragment","bordered","style","marginBottom","role","float","icon","DownloadOutlined","onClick","length","list","JSON","parse","stringify","item","类别","type_name","型号","model_name","品牌","brand_name","数量","count","配置","config","备注","note","存放地址","storage_address","入库日期","createDownLoadData","marginLeft","PlusOutlined","dataSource","rowSelection","selectedRowKeys","selectedRows","pagination","size","ref","React","AntdIcon","_objectSpread","DownloadOutlinedSvg","displayName"],"sourceRoot":""}